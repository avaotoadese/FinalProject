---
title: "EPI 590 Final Quarto"
author: "Ava Otoadese"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
1 + 1
```

You can add options to executable code like this

```{r}
#| echo: false
2 * 2
```

The `echo: false` option disables the printing of code (only output is displayed).

**The Dataset:**

This dataset contains the total number of probable, confirmed and suspected Ebola cases and deaths in Guinea, Liberia, Sierra Leone, Nigeria, Senegal, Mali, Spain USA, UK and Italy according to the World Health Organization. This was sourced via the [Humanitarian Data Exchange](https://data.humdata.org/dataset/ebola-cases-2014).

**Descriptive Statistics**

-   Read in dataset & save file

-   Create a `{gtsummary}` table of descriptive statistics about your data

```{r}
install.packages("gtsummary", dependencies = TRUE)
install.packages("here")
install.packages("tidyverse")

#route and print ebola dataset 
ebola <-(here::here("data", "ebola.csv"))
ebola <- read.csv("data/ebola.csv")


#create a descriptive table for ebola dataset for variables indicator and value by country
library(gtsummary)
#| label: tbl-one
#| tbl-cap: "Descriptive statistics"
table1 <- tbl_summary(
  ebola,
  by = Country,
  include = c(Indicator, value))
table1

```

`@tbl-one` contains descriptive statistics for the ebola dataset for variables "value" and "Indicator" by Country

-   Fit a regression and present well-formatted results from the regression

```{r}
#create a regression for ebola dataset using gtsummary
#| label: tbl-two
#| tbl-cap: "Univariate Regression"
tbl_uvregression(
  ebola, 
  y = value,
  include = c(Country, Indicator,
              Date, value),
  method = lm)
```

`@tbl-two` contains univariate regression results from the ebola dataset

-   Create a figure

    ```{r}
    #| label: fig-hist
    #| fig-cap: "ebola count"
    hist(ebola$value)
    ```

@fig-hist contains a histogram for Ebola count

-   Create a function

```{r}
stats <- list(n = nrow(ebola),
              mean_value = mean(ebola$value))
```

There are `` `r stats$n` `` data entries with a mean age of `` `r stats$mean_value` ``.

-   Inline R code

    ```{r}
    inline_text(table1, variable = "Indicator", level = "Case fatality rate (CFR) of confirmed Ebola cases", column = "Italy")
    ```

There were `r nrow(ebola)` data entries

Save file with {here} package

```{r}
write_rds(ebola, here::here("data", "ebolafinal"))
```
